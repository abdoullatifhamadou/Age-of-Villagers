Composite pattern is a partitioning design pattern and describes a group of 
objects that is treated the same way as a single instance of the same type of object. 
The intent of a composite is to “compose” objects into tree structures to represent part-whole hierarchies. 
It allows you to have a tree structure and ask each node in the tree structure to perform a task.


Java OOP representation for given sceanario -

A village will have some village properties (items).

Village_propetry (water,tree,house etc.) will be formed using various shapes.

Shapes will have some properties, according to different needs.

example - rectangle shape, triangle shape, cureved shape, leaf shape, pot shape etc.

Every type of shape will inherit the base interface of shape.

So we can use composite design pattern here.

A village_property can contain, shapes or modified shapes.
